generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  username    String      @unique
  email       String      @unique
  name        String?
  phoneNumber String?
  password    String
  accountType AccountType @default(USER)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  bookings    Booking[]
  properties  Property[]
  reviews     Review[]
}

model Property {
  id          Int            @id @default(autoincrement())
  title       String
  description String
  price       Int
  location    String
  userId      Int
  createdAt   DateTime       @default(now())
  ratings     Float?         @default(0.0)
  status      PropertyStatus @default(AVAILABLE)
  updatedAt   DateTime       @updatedAt
  image       String
  bookings    Booking[]
  user        User           @relation(fields: [userId], references: [id])
  reviews     Review[]
}

model Review {
  id         Int      @id @default(autoincrement())
  propertyId Int
  rating     Float
  comment    String
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  property   Property @relation(fields: [propertyId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

model Booking {
  id         Int           @id @default(autoincrement())
  propertyId Int
  userId     Int
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  paymentId  String?
  status     BookingStatus @default(PENDING)
  price      Int
  property   Property      @relation(fields: [propertyId], references: [id])
  user       User          @relation(fields: [userId], references: [id])
}

enum PropertyStatus {
  AVAILABLE
  BOOKED
  UNLISTED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum AccountType {
  USER
  HOST
  ADMIN
}
